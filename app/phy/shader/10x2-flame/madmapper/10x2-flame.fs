/*{
    "CREDIT": "Do something cool",
    "DESCRIPTION": "describe your material here",
    "TAGS": "template",
    "VSN": "1.0",
    "INPUTS": [ 
		{"LABEL": "Speed", "NAME": "mat_speed", "TYPE": "float", "MIN": 0.0, "MAX": 2.0, "DEFAULT": 1.0 }, 
    ],
	"GENERATORS": [
        {"NAME": "mat_time", "TYPE": "time_base", "PARAMS": {"speed": "mat_speed"} },
    ],
}*/

vec4 materialColorForPixel( vec2 texCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    // 0 is top left
    vec2 uv = (texCoord)*1.4;
    // re-set coordinates to center the flame
    // x and y will be between -0.5 and 0.5
    vec2 position = uv - vec2(0.7, 0.6);
    position.y *= -1.;


    // black as background
    // vec3(1.0, 1.0, 0.0) is yellow
    vec3 color = vec3(0.0, 0.0, 0.0);

    // y0 is top and y1 is bottom, so 10x squared 2 will be flipped downwards
    // x values
    float fx = pow(position.x * 6., 2.);

    // flickering generated by moving the coordinate system by a small amount with time as factor
    position.y += fract(sin(TIME * 24.)) * 0.1;

    // 
    float y = length(position + vec2(position.x, fx));

    color.r += smoothstep(0.0, 0.3, 0.71 - y) * 0.71;
    color.g += smoothstep(0.0, 0.3, 0.71 - y) * 0.54;
    //color.rg += 1. - y;

    // Output to screen
    return vec4(color,1.0);
}